{"version":3,"sources":["webpack:///./src/containers/CVPage/CV.tsx","webpack:///./src/effects/useCV.ts","webpack:///./src/containers/CVPage/index.tsx","webpack:///./src/pages/cv.tsx"],"names":["Text","text","split","map","t","renderJob","j","key","position","from","to","renderMilestone","m","title","when","renderInfo","list","length","undefined","skills","CV","allDataYaml","nodes","education","jobs","about","milestones","sponsored","attended","className","icon","CVPage","Intro","site","description","siteMetadata"],"mappings":"uNAWMA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjC,oCACGA,EAAKC,MAAM,mBAAmBC,IAAI,SAACC,GAAD,OACjC,2BAAIA,OASV,IAAMC,EAAY,SAACC,GAAD,OAChB,kBAAC,IAAD,eAAKC,IAAKD,EAAEE,SAAWF,EAAEG,KAAOH,EAAEI,IAAQJ,KAGtCK,EAAkB,SAACC,GAAD,OACtB,kBAAC,IAAD,eAAWL,IAAKK,EAAEC,MAAQD,EAAEE,MAAUF,KAGlCG,EAAa,SAACC,GAAD,OACfA,EAAKC,aAZ6BC,IAYbF,EAAK,GAZHG,OAarBH,EAAKb,IAAIE,GACTW,EAAKb,IAAIQ,IAER,SAASS,IAAK,MCxBM,OAEnBC,YACEC,MAHiB,GDyBjBC,EADW,EACXA,UAAWC,EADA,EACAA,KAAMC,EADN,EACMA,MAAOC,EADb,EACaA,WAAYC,EADzB,EACyBA,UAAWC,EADpC,EACoCA,SAEvD,OACE,oCACE,kBAAC,IAAD,CACEC,UAAU,mBACVhB,MAAM,WACNiB,KAAM,kBAAC,IAAD,OAEN,kBAAC,EAAD,CAAM7B,KAAMwB,KAEd,kBAAC,IAAD,CACEI,UAAU,mBACVhB,MAAM,kBACNiB,KAAM,kBAAC,IAAD,OAELf,EAAWS,IAEd,kBAAC,IAAD,CACEK,UAAU,mBACVhB,MAAM,uBACNiB,KAAM,kBAAC,IAAD,OAELf,EAAWQ,IAEd,kBAAC,IAAD,CACEM,UAAU,mBACVhB,MAAM,aACNiB,KAAM,kBAAC,IAAD,OAELf,EAAWW,IAEd,kBAAC,IAAD,CAASb,MAAM,mBAAmBiB,KAAM,kBAAC,IAAD,OACrCf,EAAWY,IAEd,kBAAC,IAAD,CAASd,MAAM,wCAAwCiB,KAAM,kBAAC,IAAD,OAC1Df,EAAWa,KEpEb,IAeQG,EAfiB,WAC9B,OACE,gCACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,OAEF,gBAAC,IAAD,KACE,gBAAC,EAAD,UCqBKZ,UA1B8B,WAAM,IACzCa,EADyC,OACzCA,KAcR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,YAAaD,EAAKE,aAAaD,YAC/BrB,MAAM,yCAER,kBAAC,EAAD,S","file":"component---src-pages-cv-tsx-e3a0c0e59388396ce349.js","sourcesContent":["import React, { FC } from \"react\"\nimport {\n  Section,\n  Job,\n  JobData,\n  MilestoneData,\n  Milestone,\n} from \"../../components\"\nimport { useCV } from \"../../effects\"\nimport { FaUserCircle, MdWork, MdSchool, FaStar } from \"react-icons/all\"\n\nconst Text: FC<{ text: string }> = ({ text }) => (\n  <>\n    {text.split(/(?:\\r\\n|\\r|\\n)/g).map((t: string) => (\n      <p>{t}</p>\n    ))}\n  </>\n)\n\nfunction isJob(info: JobData | MilestoneData): info is JobData {\n  return (info as JobData).skills !== undefined\n}\n\nconst renderJob = (j: JobData) => (\n  <Job key={j.position + j.from + j.to} {...j} />\n)\n\nconst renderMilestone = (m: MilestoneData) => (\n  <Milestone key={m.title + m.when} {...m} />\n)\n\nconst renderInfo = (list: JobData[] | MilestoneData[]) =>\n  !!list.length && isJob(list[0])\n    ? list.map(renderJob)\n    : list.map(renderMilestone)\n\nexport function CV() {\n  const { education, jobs, about, milestones, sponsored, attended } = useCV()\n\n  return (\n    <>\n      <Section\n        className=\"page-break-after\"\n        title=\"Who I am\"\n        icon={<FaUserCircle />}\n      >\n        <Text text={about} />\n      </Section>\n      <Section\n        className=\"page-break-after\"\n        title=\"Work experience\"\n        icon={<MdWork />}\n      >\n        {renderInfo(jobs)}\n      </Section>\n      <Section\n        className=\"page-break-after\"\n        title=\"Education & Training\"\n        icon={<MdSchool />}\n      >\n        {renderInfo(education)}\n      </Section>\n      <Section\n        className=\"page-break-after\"\n        title=\"Milestones\"\n        icon={<FaStar />}\n      >\n        {renderInfo(milestones)}\n      </Section>\n      <Section title=\"Sponsored Events\" icon={<FaStar />}>\n        {renderInfo(sponsored)}\n      </Section>\n      <Section title=\"Attended Conferences during last year\" icon={<FaStar />}>\n        {renderInfo(attended)}\n      </Section>\n    </>\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport { JobData, MilestoneData } from \"@components\";\n\nexport interface CV {\n    education: JobData[]\n    jobs: JobData[]\n    about: string\n    milestones: MilestoneData[]\n    sponsored: MilestoneData[]\n    attended: MilestoneData[]\n}\n\nexport function useCV(): CV{\n    const {\n        allDataYaml: {\n          nodes: [cv],\n        },\n      } = useStaticQuery(graphql`\n        query {\n          allDataYaml {\n            nodes {\n                jobs {\n                  description\n                  location\n                  from\n                  employer\n                  skills\n                  position\n                  to\n                }\n                about\n                milestones {\n                  title\n                  when\n                  youtube\n                  twitter\n                  location\n                  description\n                }\n                sponsored {\n                  title\n                  when\n                  location\n                }\n                attended {\n                  title\n                  when\n                  location\n                }\n                education {\n                  description\n                  employer\n                  from\n                  location\n                  position\n                  skills\n                  to\n                }\n              }\n          }\n        }\n      `)\n\n      return cv;\n}","import * as React from \"react\"\nimport { CVWrapper, CVPageTitle, CVDetails } from \"./style\"\nimport Intro from \"../HomePage/Intro\"\nimport { CV } from \"./CV\"\n\nexport const CVPage: React.FC = () => {\n  return (\n    <>\n      <CVWrapper>\n        <CVPageTitle>\n          <Intro />\n        </CVPageTitle>\n        <CVDetails>\n          <CV />\n        </CVDetails>\n      </CVWrapper>\n    </>\n  )\n}\n\nexport default CVPage\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport CVPage from \"../containers/CVPage\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\ntype CVProps = {}\n\nconst CV: React.FunctionComponent<CVProps> = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Layout>\n      <SEO\n        description={site.siteMetadata.description}\n        title=\"Ulises Santana | JavaScript Engineer\"\n      />\n      <CVPage />\n    </Layout>\n  )\n}\n\nexport default CV\n"],"sourceRoot":""}