{"version":3,"sources":["webpack:///./src/containers/Contact/style.tsx","webpack:///./src/containers/Contact/index.tsx","webpack:///./src/pages/contact.tsx"],"names":["ContactWrapper","styled","div","withConfig","displayName","componentId","ContactPageTitle","themeGet","ContactFromWrapper","InputGroup","SignupSchema","Yup","shape","firstName","required","email","message","Contact","react","formik_esm","initialValues","onSubmit","values","actions","setTimeout","console","log","alert","JSON","stringify","setSubmitting","validationSchema","render","_ref","handleChange","errors","handleBlur","touched","isSubmitting","Input","type","name","value","onChange","onBlur","label","notification","Button","title","isLoading","loader","ContactPage","react_default","a","createElement","layout","seo","description","containers_Contact"],"mappings":"kNAGaA,EAAiBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,kOAadK,EAAmBL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,kZAQhBM,YAAS,mBAAoB,YAc7BC,EAAqBP,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,yIAUlBQ,EAAaR,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,uRC9BjBS,EAAeC,WAAaC,MAAM,CACtCC,UAAWF,WAAaG,SAAS,YACjCC,MAAOJ,WACJI,MAAM,iBACND,SAAS,YACZE,QAASL,WAAaG,SAAS,cA2FlBG,EAxFgB,WAC7B,OACEC,EAAA,cAACC,EAAA,EAAD,CACEC,cAAe,CAAEP,UAAW,GAAIE,MAAO,GAAIC,QAAS,IACpDK,SAAU,SACRC,EACAC,GAEAC,WAAW,WACTC,QAAQC,IAAI,CAAEJ,SAAQC,YACtBI,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,IACnCC,EAAQO,eAAc,IACrB,MAELC,iBAAkBrB,EAClBsB,OAAQ,SAAAC,GAAA,IACNC,EADMD,EACNC,aACAZ,EAFMW,EAENX,OACAa,EAHMF,EAGNE,OACAC,EAJMH,EAING,WACAC,EALMJ,EAKNI,QACAC,EANML,EAMNK,aANM,OAQNpB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAAClB,EAAD,KACEkB,EAAA,cAACZ,EAAD,KACEY,EAAA,mCACAA,EAAA,kPAOFA,EAAA,cAACV,EAAD,KACEU,EAAA,cAACT,EAAD,KACES,EAAA,cAACqB,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,YACLC,MAAK,GAAKpB,EAAOT,UACjB8B,SAAUT,EACVU,OAAQR,EACRS,MAAM,OACNC,aAAY,IACVX,EAAOtB,WAAawB,EAAQxB,UACxBsB,EAAOtB,UACP,MAGRK,EAAA,cAACqB,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAK,GAAKpB,EAAOP,MACjB4B,SAAUT,EACVU,OAAQR,EACRS,MAAM,QACNC,aAAY,IACVX,EAAOpB,OAASsB,EAAQtB,MAAQoB,EAAOpB,MAAQ,OAIrDG,EAAA,cAACqB,EAAA,EAAD,CACEC,KAAK,WACLC,KAAK,UACLC,MAAK,GAAKpB,EAAON,QACjB2B,SAAUT,EACVU,OAAQR,EACRS,MAAM,UACNC,aACEX,EAAOnB,SAAWqB,EAAQrB,QAAUmB,EAAOnB,QAAU,KAGzDE,EAAA,cAAC6B,EAAA,EAAD,CACEC,MAAM,SACNR,KAAK,SACLS,YAAWX,EACXY,OAAO,yBCnFVC,UAbgD,WAC7D,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACER,MAAM,aACNS,YAAY,wLAGdL,EAAAC,EAAAC,cAACI,EAAD","file":"component---src-pages-contact-tsx-84567b4dfdb3d65272d1.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const ContactWrapper = styled.div`\r\n  width: 870px;\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  max-width: 100%;\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const ContactPageTitle = styled.div`\r\n  margin-bottom: 90px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 60px;\r\n  }\r\n  h2 {\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n    color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n    line-height: 1.53;\r\n    margin-bottom: 15px;\r\n    @media (max-width: 990px) {\r\n      font-size: 26px;\r\n      margin-bottom: 12px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      font-size: 22px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContactFromWrapper = styled.div`\r\n  position: relative;\r\n  .button {\r\n    margin-top: 60px;\r\n    @media (max-width: 575px) {\r\n      margin-top: 40px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n\r\n  .field-wrapper {\r\n    flex-grow: 1;\r\n    max-width: calc(50% - 30px);\r\n    margin-bottom: 60px;\r\n    @media (max-width: 575px) {\r\n      max-width: 100%;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Formik, FormikActions, FormikProps, Form } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport Input from \"components/Input/Input\"\r\nimport Button from \"components/Button/Button\"\r\nimport {\r\n  ContactWrapper,\r\n  ContactPageTitle,\r\n  ContactFromWrapper,\r\n  InputGroup,\r\n} from \"./style\"\r\n\r\ninterface MyFormValues {\r\n  firstName: string\r\n  email: string\r\n  message: string\r\n}\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Required\"),\r\n  message: Yup.string().required(\"Required\"),\r\n})\r\n\r\nconst Contact: React.SFC<{}> = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ firstName: \"\", email: \"\", message: \"\" }}\r\n      onSubmit={(\r\n        values: MyFormValues,\r\n        actions: FormikActions<MyFormValues>\r\n      ) => {\r\n        setTimeout(() => {\r\n          console.log({ values, actions })\r\n          alert(JSON.stringify(values, null, 2))\r\n          actions.setSubmitting(false)\r\n        }, 700)\r\n      }}\r\n      validationSchema={SignupSchema}\r\n      render={({\r\n        handleChange,\r\n        values,\r\n        errors,\r\n        handleBlur,\r\n        touched,\r\n        isSubmitting,\r\n      }: FormikProps<MyFormValues>) => (\r\n        <>\r\n          <Form>\r\n            <ContactWrapper>\r\n              <ContactPageTitle>\r\n                <h2>Contact</h2>\r\n                <p>\r\n                  StoryHub theme comes with a contact form built-in. You can use\r\n                  this form with Gatsbay Js service and get up to 50 submissions\r\n                  for free per form per month. Also, you can easily switch to\r\n                  another service if you want.\r\n                </p>\r\n              </ContactPageTitle>\r\n              <ContactFromWrapper>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={`${values.firstName}`}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    label=\"Name\"\r\n                    notification={`${\r\n                      errors.firstName && touched.firstName\r\n                        ? errors.firstName\r\n                        : \"\"\r\n                    }`}\r\n                  />\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={`${values.email}`}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    label=\"Email\"\r\n                    notification={`${\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }`}\r\n                  />\r\n                </InputGroup>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"message\"\r\n                  value={`${values.message}`}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  label=\"Message\"\r\n                  notification={\r\n                    errors.message && touched.message ? errors.message : \"\"\r\n                  }\r\n                />\r\n                <Button\r\n                  title=\"Submit\"\r\n                  type=\"submit\"\r\n                  isLoading={isSubmitting ? true : false}\r\n                  loader=\"Submitting..\"\r\n                />\r\n              </ContactFromWrapper>\r\n            </ContactWrapper>\r\n          </Form>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Contact from \"../containers/Contact\"\r\n\r\ntype ContactPageProps = {}\r\n\r\nconst ContactPage: React.FunctionComponent<ContactPageProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Contact Us\"\r\n        description=\"StoryHub is a beautiful Gatsby Blog theme designed to showcase your work in style. Perfect for designers, artists, photographers and developers to use for their portfolio website.\"\r\n      />\r\n\r\n      <Contact />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ContactPage\r\n"],"sourceRoot":""}