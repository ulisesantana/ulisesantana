{"version":3,"sources":["webpack:///./src/containers/HomePage/style.tsx","webpack:///./src/containers/HomePage/Posts/style.tsx","webpack:///./src/containers/HomePage/Posts/index.tsx","webpack:///../components/FeaturedCard/FeaturedCard.style.tsx","webpack:///../components/FeaturedCard/FeaturedCard.tsx","webpack:///./src/containers/HomePage/FeaturedPost/style.tsx","webpack:///./src/containers/HomePage/FeaturedPost/index.tsx","webpack:///./src/containers/HomePage/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/containers/HomePage/Intro/style.tsx","webpack:///./src/containers/HomePage/Intro/index.tsx"],"names":["PersonalBlogWrapper","styled","div","withConfig","displayName","componentId","BlogPostsWrapper","SecTitle","themeGet","Posts","props","Data","_2325063231","data","allMarkdownRemark","edges","TotalPage","allSitePage","nodes","context","numPages","CurrentPage","currentPage","react","Posts_style","map","_ref","node","title","frontmatter","fields","slug","PostCardMinimal","key","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","Pagination","nextLink","totalPage","FeaturedCardWrapper","PostPreview","PostDetails","PostMeta","ReadMore","PostTitle","h2","PostTags","Excerpt","p","FeaturedCard","className","imageType","overlay","_objectWithoutPropertiesLoose","addClass","push","Object","assign","join","gatsby_browser_entry","to","gatsby_image_default","a","alt","fixed","tag","index","kebabCase_default","dangerouslySetInnerHTML","__html","defaultProps","FeaturedPostWrapper","FeaturedPostRow","FeaturedPostCol","FeaturedPosts","_2755758273","style_SecTitle","components_FeaturedCard_FeaturedCard","PersonalBlog","style","Intro","FeaturedPost","HomePage_Posts","__webpack_require__","d","__webpack_exports__","pageQuery","PersonalBlogPage","react_default","createElement","layout","seo","site","siteMetadata","HomePage","IntroWrapper","IntroImage","IntroTitle","h1","Desciption","IntroInfo","_2627127705","_Data$site$siteMetada","author","about","AuthorImage","avatar","Logo","easter","SocialLinks"],"mappings":"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","file":"component---src-pages-index-tsx-b8989d5baf4f7a39e146.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst PersonalBlogWrapper = styled.div``\r\n\r\nexport default PersonalBlogWrapper\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nconst BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 90px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const SecTitle = styled.div`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nexport default BlogPostsWrapper\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport PostCardMinimal from \"components/PostCardMinimal/PostCardMinimal\"\r\nimport Pagination from \"components/Pagination/Pagination\"\r\nimport BlogPostsWrapper, { SecTitle } from \"./style\"\r\n\r\ntype PostsProps = {}\r\n\r\nconst Posts: React.FunctionComponent<PostsProps> = props => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allSitePage(filter: { path: { eq: \"/page/1\" } }) {\r\n        nodes {\r\n          context {\r\n            numPages\r\n            currentPage\r\n          }\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n        limit: 5\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 300)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"DD [<span>] MMM [</span>]\")\r\n              title\r\n              description\r\n              tags\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 325, maxHeight: 325, quality: 90) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const Posts = Data.allMarkdownRemark.edges\r\n  const TotalPage = Data.allSitePage.nodes[0].context.numPages\r\n  const CurrentPage = Data.allSitePage.nodes[0].context.currentPage\r\n\r\n  return (\r\n    <BlogPostsWrapper>\r\n      <SecTitle>Leatest Stories</SecTitle>\r\n      {Posts.map(({ node }: any) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <PostCardMinimal\r\n            key={node.fields.slug}\r\n            title={title}\r\n            image={\r\n              node.frontmatter.cover == null\r\n                ? null\r\n                : node.frontmatter.cover.childImageSharp.fluid\r\n            }\r\n            url={node.fields.slug}\r\n            description={node.frontmatter.description || node.excerpt}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n          />\r\n        )\r\n      })}\r\n\r\n      {TotalPage >> 1 ? (\r\n        <Pagination\r\n          nextLink=\"/page/2\"\r\n          currentPage={CurrentPage}\r\n          totalPage={TotalPage}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </BlogPostsWrapper>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\n\r\nexport const FeaturedCardWrapper = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    .post_details {\r\n      opacity: 1;\r\n      bottom: 30px;\r\n      @media (max-width: 1400px) {\r\n        bottom: 25px;\r\n      }\r\n      @media (max-width: 1024px) {\r\n        bottom: 20px;\r\n      }\r\n      @media (max-width: 990px) {\r\n        bottom: 15px;\r\n      }\r\n    }\r\n  }\r\n  &.overlay {\r\n    &:hover {\r\n      &:before {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: block;\r\n      top: 0;\r\n      left: 0;\r\n      background: linear-gradient(\r\n        to bottom,\r\n        rgba(112, 112, 112, 0.2) 0%,\r\n        rgba(0, 0, 0, 0.8) 100%\r\n      );\r\n      z-index: 1;\r\n      pointer-events: none;\r\n      opacity: 0;\r\n      transition: 0.3s ease-in-out;\r\n      @media (max-width: 1024px) {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    .post_details {\r\n      background: transparent;\r\n      padding: 0;\r\n    }\r\n    .post_title {\r\n      font-size: 15px;\r\n      font-family: 'Fira Sans', sans-serif;\r\n      line-height: 1.4;\r\n      margin-bottom: 18px;\r\n      a {\r\n        color: #fff;\r\n      }\r\n    }\r\n    .read_more {\r\n      a {\r\n        color: #f6c667;\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  position: absolute;\r\n  width: calc(100% - 60px);\r\n  bottom: 0;\r\n  left: 30px;\r\n  background-color: #fff;\r\n  padding: 30px;\r\n  border-radius: 3px;\r\n  opacity: 0;\r\n  z-index: 2;\r\n  transition: 0.3s ease-in-out;\r\n  @media (max-width: 1400px) {\r\n    width: calc(100% - 50px);\r\n    left: 25px;\r\n    padding: 25px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    opacity: 1;\r\n    bottom: 20px;\r\n    width: calc(100% - 40px);\r\n    left: 20px;\r\n    padding: 20px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    opacity: 1;\r\n    bottom: 15px;\r\n    width: calc(100% - 30px);\r\n    left: 15px;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const PostMeta = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const ReadMore = styled.div`\r\n  a {\r\n    font-size: 13px;\r\n    font-weight: 700;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  margin-bottom: 10px;\r\n  a {\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n  }\r\n  @media (max-width: 1400px) {\r\n    font-size: 18px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 15px;\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 15px;\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (max-width: 990px) and (min-width: 768px) {\r\n    font-size: 14px;\r\n    max-height: 3em;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 20px;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#D10068')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3', '15')}px;\r\n  color: ${themeGet('textColor', '#292929')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport _ from 'lodash';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  FeaturedCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostTitle,\r\n  PostTags,\r\n  PostMeta,\r\n  ReadMore,\r\n  Excerpt,\r\n} from './FeaturedCard.style';\r\n\r\ninterface FeaturedCardProps {\r\n  image?: any;\r\n  title: string;\r\n  description?: string;\r\n  url: string;\r\n  tags?: [];\r\n  className?: string;\r\n  imageType?: 'fixed' | 'fluid';\r\n  overlay?: boolean;\r\n}\r\n\r\nconst FeaturedCard: React.FunctionComponent<FeaturedCardProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  overlay,\r\n  ...props\r\n}) => {\r\n  const addClass = ['featured_card'];\r\n\r\n  if (overlay == true) {\r\n    addClass.push('overlay');\r\n  }\r\n\r\n  if (className) {\r\n    addClass.push(className);\r\n  }\r\n\r\n  return (\r\n    <FeaturedCardWrapper className={addClass.join(' ')} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>\r\n            {imageType === 'fluid' ? (\r\n              <Img fluid={image} alt=\"post preview\" />\r\n            ) : (\r\n              <Img fixed={image} alt=\"post preview\" />\r\n            )}\r\n          </Link>\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails className=\"post_details\">\r\n        <PostMeta>\r\n          {tags == null || overlay == true ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n        </PostMeta>\r\n\r\n        <PostTitle className=\"post_title\">\r\n          <Link to={url}>{title}</Link>\r\n        </PostTitle>\r\n        {overlay == true ? (\r\n          ''\r\n        ) : (\r\n          <>\r\n            {' '}\r\n            {description && (\r\n              <Excerpt\r\n                dangerouslySetInnerHTML={{\r\n                  __html: description,\r\n                }}\r\n                className=\"excerpt\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <ReadMore className=\"read_more\">\r\n          <Link to={url}>{overlay == true ? 'Read Story' : 'Read More'}</Link>\r\n        </ReadMore>\r\n      </PostDetails>\r\n    </FeaturedCardWrapper>\r\n  );\r\n};\r\n\r\nFeaturedCard.defaultProps = {\r\n  imageType: 'fluid',\r\n};\r\n\r\nexport default FeaturedCard;\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const FeaturedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 75px 0 75px;\r\n  position: relative;\r\n\r\n  @media (max-width: 1400px) {\r\n    padding: 0 35px 0 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 0 25px 0 25px;\r\n  }\r\n`\r\n\r\nexport const FeaturedPostRow = styled.div`\r\n  margin: 0 -15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media (max-width: 1024px) {\r\n    margin: 0 -10px;\r\n  }\r\n`\r\n\r\nexport const FeaturedPostCol = styled.div`\r\n  max-width: 16.6666666667%;\r\n  flex: 0 0 16.6666666667%;\r\n  float: left;\r\n  padding: 0 15px;\r\n  @media (max-width: 1024px) {\r\n    padding: 0 10px;\r\n    max-width: 33.3333333%;\r\n    flex: 0 0 33.3333333%;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    max-width: 100%;\r\n    flex: 0 0 100%;\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nexport const SecTitle = styled.div`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet(\"fontFamily.0\", \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 68px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport FeaturedCard from \"components/FeaturedCard/FeaturedCard\"\r\nimport {\r\n  FeaturedPostWrapper,\r\n  FeaturedPostRow,\r\n  FeaturedPostCol,\r\n  SecTitle,\r\n} from \"./style\"\r\n\r\ntype FeaturedPostsProps = {}\r\n\r\nconst FeaturedPosts: React.FunctionComponent<FeaturedPostsProps> = props => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allSitePage(filter: { path: { eq: \"/page/1\" } }) {\r\n        nodes {\r\n          context {\r\n            numPages\r\n            currentPage\r\n          }\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n        limit: 6\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 150)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"MMM DD, YYYY\")\r\n              title\r\n              description\r\n              tags\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 270, maxHeight: 405, quality: 100) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const Posts = Data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <FeaturedPostWrapper>\r\n      <SecTitle>Featured Stories</SecTitle>\r\n      <FeaturedPostRow>\r\n        {Posts.map(({ node }: any) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <FeaturedPostCol key={title}>\r\n              <FeaturedCard\r\n                title={title}\r\n                image={\r\n                  node.frontmatter.cover == null\r\n                    ? null\r\n                    : node.frontmatter.cover.childImageSharp.fluid\r\n                }\r\n                url={node.fields.slug}\r\n                tags={node.frontmatter.tags}\r\n                description={node.excerpt}\r\n                overlay\r\n              />\r\n            </FeaturedPostCol>\r\n          )\r\n        })}\r\n      </FeaturedPostRow>\r\n    </FeaturedPostWrapper>\r\n  )\r\n}\r\n\r\nexport default FeaturedPosts\r\n","import * as React from \"react\"\r\nimport PersonalBlogWrapper from \"./style\"\r\nimport Intro from \"./Intro\"\r\nimport Posts from \"./Posts\"\r\nimport FeaturedPosts from \"./FeaturedPost\"\r\n\r\ntype PersonalBlogProps = {}\r\n\r\nconst PersonalBlog: React.FunctionComponent<PersonalBlogProps> = ({\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PersonalBlogWrapper {...props}>\r\n      <Intro />\r\n      <FeaturedPosts />\r\n      <Posts />\r\n    </PersonalBlogWrapper>\r\n  )\r\n}\r\n\r\nexport default PersonalBlog\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport PersonalBlog from \"../containers/HomePage\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst PersonalBlogPage = (props: any) => {\r\n  const { data } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Personal Blog\"\r\n        description={data.site.siteMetadata.description}\r\n      />\r\n      <PersonalBlog />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PersonalBlogPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1170, quality: 90) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\nimport { themeGet } from \"styled-system\"\r\n\r\nexport const IntroWrapper = styled.div`\r\n  width: 940px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 75px 10px 75px 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 1400px) {\r\n    padding: 60px 10px 60px 10px;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    padding: 50px 10px 50px 10px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 35px 25px 40px 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: block;\r\n    padding: 50px 25px 80px 25px;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const IntroImage = styled.div`\r\n  background-color: transparent;\r\n  width: 270px;\r\n  height: 270px;\r\n  padding: 30px;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  border: 1px solid ${themeGet(\"colors.lightBorderColor\", \"#ededed\")};\r\n  flex-shrink: 0;\r\n  perspective: 1000px;\r\n\r\n  @media (max-width: 990px) {\r\n    width: 220px;\r\n    height: 220px;\r\n    padding: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    width: 180px;\r\n    height: 180px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    display: block;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .flip-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    transition: transform 0.6s;\r\n    transform-style: preserve-3d;\r\n  }\r\n  \r\n  &:hover .flip-container, &:active .flip-container {\r\n    transform: rotateY(180deg);\r\n    \r\n    .flip-front{\r\n      opacity: 0;\r\n    }\r\n  }\r\n  \r\n  .flip-front, .flip-back {\r\n    background-color: transparent;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    backface-visibility: hidden;\r\n    transition: opacity ease-in-out 0.6s;\r\n  }\r\n  \r\n  .flip-back {\r\n    transform: rotateY(180deg);    \r\n  }\r\n`\r\n\r\nexport const IntroTitle = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  font-family: ${themeGet(\"fontFamily.1\", \"'Poppins', sans-serif\")};\r\n  color: ${themeGet(\"colors.black\", \"#292929\")};\r\n  margin-bottom: 20px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`\r\n\r\nexport const Desciption = styled.p`\r\n  color: ${themeGet(\"colors.textColor\", \"#292929\")};\r\n  font-size: ${themeGet(\"fontSizes.3\", \"15\")}px;\r\n  line-height: ${themeGet(\"lineHeights.text\", \"2\")};\r\n`\r\n\r\nexport const IntroInfo = styled.div`\r\n  padding-left: 30px;\r\n  @media (max-width: 575px) {\r\n    padding-left: 0;\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport {GITHUB_URL, INSTAGRAM_URL, TELEGRAM_URL, TWITTER_URL} from \"../../../constants\";\r\nimport SocialProfile from \"components/SocialProfile/SocialProfile\"\r\nimport {\r\n  IntroWrapper,\r\n  IntroImage,\r\n  IntroTitle,\r\n  Desciption,\r\n  IntroInfo,\r\n} from \"./style\"\r\nimport {SocialLinks} from \"../../../components/SocialLinks\";\r\n\r\ntype IntroProps = {}\r\n\r\nconst Intro: React.FunctionComponent<IntroProps> = props => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      avatar: file(absolutePath: { regex: \"/author.jpg/\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth: 210, maxHeight: 210, quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n          }\r\n        }\r\n      },\r\n        easter: file(absolutePath: { regex: \"/logo.png/\" }) {\r\n            childImageSharp {\r\n                fluid(maxWidth: 210, maxHeight: 210, quality: 100) {\r\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n            }\r\n        },\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          about\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, about } = Data.site.siteMetadata\r\n  const AuthorImage = Data.avatar.childImageSharp.fluid\r\n  const Logo = Data.easter.childImageSharp.fluid\r\n\r\n  return (\r\n    <IntroWrapper>\r\n      <IntroImage>\r\n        <div className=\"flip-container\">\r\n          <div className=\"flip-front\">\r\n            <Image fluid={AuthorImage} alt=\"author\" />\r\n          </div>\r\n          <div className=\"flip-back\">\r\n            <Image fluid={Logo} alt=\"It's me!\" />\r\n          </div>\r\n        </div>\r\n      </IntroImage>\r\n      <IntroInfo>\r\n        <IntroTitle>\r\n          Hey! I’m <b>{author}</b>\r\n        </IntroTitle>\r\n        <Desciption>{about}</Desciption>\r\n        <SocialLinks/>\r\n      </IntroInfo>\r\n    </IntroWrapper>\r\n  )\r\n}\r\n\r\nexport default Intro\r\n"],"sourceRoot":""}